# tafryn prompt theme
# based on adam2

prompt_tafryn_help () {
  cat <<'EOF'
This prompt is color-scheme-able.  You can invoke it thus:

  prompt tafryn [ 8bit ] [<color1> [<color2> [<color3>] [<color4>]]

where the colors are for the hyphens, current directory, user@host,
and user input bits respectively.  The default colors are cyan, green,
cyan, and white.  This theme works best with a dark background.

If you have either UTF-8 or the `nexus' or `vga' console fonts or similar,
you can specify the `8bit' option to use 8-bit replacements for the
7-bit characters.

And you probably thought adam1 was overkill ...
EOF
}

prompt_tafryn_setup () {
  # Some can't be local
  local prompt_gfx_tlc prompt_gfx_mlc prompt_gfx_blc

  autoload zsh/terminfo
  source ~/.zsh/gitprompt.sh

  # Colour scheme
  if [[ -n "$SSH_CLIENT" || -n "$SSH2_CLIENT" ]]; then
      prompt_tafryn_color1=${1:-'yellow'}    # hyphens
  else
      prompt_tafryn_color1=${1:-'cyan'}    # hyphens
  fi
  prompt_tafryn_color2=${2:-'green'}   # current directory
  prompt_tafryn_color3=${3:-'white'}   # user
  prompt_tafryn_color4=${4:-'white'}   # user input
  prompt_tafryn_color5=${5:-'yellow'}  # host

  # Adjustments to git-prompt.
  ZSH_THEME_GIT_PROMPT_PREFIX="$fg_bold[black](%b%f"
  ZSH_THEME_GIT_PROMPT_SUFFIX="$fg_bold[black])%b%f"
  ZSH_THEME_GIT_PROMPT_SEPARATOR="|"
  ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg_bold[gray]%}"
  ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[red]%}%{●%G%}"
  ZSH_THEME_GIT_PROMPT_CONFLICTS="%{$fg[red]%}%{✖%G%}"
  ZSH_THEME_GIT_PROMPT_CHANGED="%{$fg_bold[blue]%}%{✚%G%}"
  ZSH_THEME_GIT_PROMPT_BEHIND="%{↓%G%}"
  ZSH_THEME_GIT_PROMPT_AHEAD="%{↑%G%}"
  ZSH_THEME_GIT_PROMPT_UNTRACKED="%{…%G%}"
  ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg_bold[green]%}%{✔%G%}"

  if [[ $1 == '8bit' ]]; then
    shift
    if [[ ${LC_ALL:-${LC_CTYPE:-$LANG}} = *UTF-8* ]]; then
      prompt_gfx_tlc=$'\xe2\x94\x8c'
      prompt_gfx_mlc=$'\xe2\x94\x9c'
      prompt_gfx_blc=$'\xe2\x94\x94'
      prompt_gfx_hyphen=$'\xe2\x94\x80'
    else
      prompt_gfx_tlc=$'\xda'
      prompt_gfx_mlc=$'\xc3'
      prompt_gfx_blc=$'\xc0'
      prompt_gfx_hyphen=$'\xc4'
    fi
  else
    typeset -A altchar
    set -A altchar ${(s..)terminfo[acsc]}
    prompt_set_charset="%{$terminfo[enacs]%}"
    prompt_shift_in="%{$terminfo[smacs]%}"
    prompt_shift_out="%{$terminfo[rmacs]%}"
    tlc=${altchar[l]:-'.'}
    mlc=${altchar[x]:-'|'}
    blc=${altchar[m]:-'\`'}
    hyphen=${altchar[q]:-'-'}
    prompt_gfx_tlc="$prompt_shift_in$tlc$prompt_shift_out"
    prompt_gfx_mlc="$prompt_shift_in$mlc$prompt_shift_out"
    prompt_gfx_blc="$prompt_shift_in$blc$prompt_shift_out"
    prompt_gfx_hyphen="$prompt_shift_in$hyphen$prompt_shift_out"
    prompt_gfx_hyphen2="$hyphen"
    prompt_simple_hyphen='-'
  fi

  if [[ $1 == 'single' ]]; then
    shift
    prompt_single_line='true'
  else
    prompt_single_line='false'
  fi

  local prompt_gfx_bbox 
  prompt_gfx_tbox="$prompt_set_charset%F{$prompt_tafryn_color1}${prompt_gfx_tlc}%b%F{$prompt_tafryn_color1}${prompt_gfx_hyphen}"
  prompt_gfx_bbox="%F{$prompt_tafryn_color1}${prompt_gfx_blc}${prompt_gfx_hyphen}%b%F{$prompt_tafryn_color1}"

  # This is a cute hack.  Well I like it, anyway.
  prompt_gfx_bbox_to_mbox=$'%{\e[A\r'"%}%B%F{$prompt_tafryn_color1}${prompt_gfx_mlc}%b%F{$prompt_tafryn_color1}${prompt_gfx_hyphen}%{"$'\e[B%}'

  prompt_l_paren="%B%F{black}(%b"
  prompt_r_paren="%B%F{black})%b"

  if [[ -n "$SSH_CLIENT" ]]; then
    prompt_user_host="$prompt_l_paren%(!.%F{red}.%F{$prompt_tafryn_color3})%n%F{$prompt_tafryn_color4}@%b%F{$prompt_tafryn_color5}%m$prompt_r_paren"
  elif [[ $prompt_single_line == 'true' ]]; then
    prompt_user_host="%b%(!.%F{red}.%F{$prompt_tafryn_color3})%n%F{$prompt_tafryn_color4}@%b%F{$prompt_tafryn_color5}%m"
  else
    prompt_user_host=""
  fi

  prompt_last_exit="%(?..%B%F{black}[%B%F{red}%?%B%F{black}])"

  prompt_line_1a="$prompt_gfx_tbox$prompt_l_paren%F{$prompt_tafryn_color2}%~$prompt_r_paren%F{$prompt_tafryn_color1}$prompt_gfx_hyphen"
  prompt_line_1b="$prompt_user_host%b%F{$prompt_tafryn_color1}${prompt_gfx_hyphen}"

  prompt_line_2="$prompt_gfx_bbox${prompt_gfx_hyphen}\$prompt_last_exit%B%F{white}"

  prompt_char="%(!.#.%%)"

  prompt_opts=(cr subst percent)

  add-zsh-hook precmd prompt_tafryn_precmd
}

prompt_tafryn_precmd() {
  setopt noxtrace localoptions extendedglob
  local prompt_line_1
  git_prompt=$(git_super_status)

  prompt_tafryn_choose_prompt

  if [[ $prompt_single_line == 'true' ]]; then
    PS1="$prompt_user_host%B%F{white}$prompt_char %b%f%k"
    RPROMPT=":%F{$prompt_tafryn_color2}%~"
  else
    PS1="$prompt_line_1$prompt_newline$prompt_line_2%B%F{white}$prompt_char %b%f%k"
    RPROMPT=""
  fi
  PS2="$prompt_line_2$prompt_gfx_bbox_to_mbox%B%F{white}%_> %b%f%k"
  PS3="$prompt_line_2$prompt_gfx_bbox_to_mbox%B%F{white}?# %b%f%k"
  zle_highlight[(r)default:*]="default:fg=$prompt_tafryn_color2,bold"
}

prompt_tafryn_choose_prompt () {
  local zero='%([BSUbfksu]|([FB]|){*})'
  local prompt_line_1a_width=${#${(S%%)prompt_line_1a//$~zero/}}
  local prompt_line_1b_width=${#${(S%%)prompt_line_1b//$~zero/}}
  local git_prompt_size=${#${(S%%)git_prompt//$~zero/}} 

  local prompt_padding_size=$(( COLUMNS
                                  - prompt_line_1a_width
                                  - prompt_line_1b_width 
                                  - git_prompt_size + 14 ))

  # Try to fit in long path and user@host.
  if (( prompt_padding_size > 0 )); then
    local prompt_padding
    eval "prompt_padding=\${(l:${prompt_padding_size}::${prompt_gfx_hyphen2}:)_empty_zz}"
    prompt_line_1="$prompt_line_1a\
$git_prompt\
$prompt_shift_in%F{$prompt_tafryn_color1}$prompt_padding%f$prompt_shift_out\
$prompt_line_1b"
    return
  fi

  prompt_padding_size=$(( COLUMNS - prompt_line_1a_width ))

  # Didn't fit; try to fit in just long path.
  if (( prompt_padding_size > 0 )); then
    local prompt_padding
    eval "prompt_padding=\${(l:${prompt_padding_size}::${prompt_gfx_hyphen}:)_empty_zz}"
    prompt_line_1="$prompt_line_1a$prompt_padding"
    return
  fi

  # Still didn't fit; truncate 
  local prompt_pwd_size=$(( COLUMNS - 5 ))
  prompt_line_1="$prompt_gfx_tbox$prompt_l_paren%B%F{$prompt_tafryn_color2}%$prompt_pwd_size<...<%~%<<$prompt_r_paren%b%F{$prompt_tafryn_color1}$prompt_gfx_hyphen"
}

prompt_tafryn_setup "$@"

# vim: ft=zsh
