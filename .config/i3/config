#|
#| File    : ~/.config/i3/config
#| Charset : UTF-8
#| Author  : Fabien Cazenave
#| Source  : https://github.com/fabi1cazenave/dotFiles
#| License : WTFPL
#|
#| Requires i3 v4.2+, tested with i3 v4.8.
#| References: /etc/i3/config, http://i3wm.org/docs/userguide.html
#| Bonus: see PotatoesMaster/i3-vim-syntax for i3 syntax hilighting.
#|

# <<<
#
# This configuration relies on a single modifier key. It uses keycodes instead of keysyms
# in order to be compatible with any keyboard layout: qwerty, qwertz, azerty, dvorak…
#
# quick config:
# ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
# │     │  w1 │  w2 │  w3 │  w4 │  w5 │  w6 │  w7 │  w8 │  w9 │  w10│  w11│  w12┃          ┃
# │ `   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ -   │ =   ┃ ⌫        ┃
# ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┯━━━━━━━┩
# ┃        ┃     │close│     │rsize│     │     │ prev│ next│split│start│     │ }   │ |     │
# ┃ ↹      ┃ q   │ w   │ e   │ r   │ t   │ y   │ u   │ i   │ o   │ p   │ [   │ ]   │ \     │
# ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┲━━━━┷━━━━━━━┪
# ┃         ┃ tab │stack│ div.│ full│     │focus│focus│focus│focus│focus│focus┃            ┃
# ┃ ⇬       ┃ a   │ s   │ d   │ f   │ g   │ h ← │ j ↓ │ k ↑ │ l → │ ;   │ '   ┃ ⏎          ┃
# ┣━━━━━━━━━┻━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┻━━━━━━━━━━━━┫
# ┃            ┃     │     │     │     │bordr│     │     │     │     │     ┃               ┃
# ┃ ⇧          ┃ z   │ x   │ c   │ v   │ b   │ n   │ m   │ ,   │ .   │ /   ┃ ⇧             ┃
# ┣━━━━━━━┳━━━━┻━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
# ┃       ┃ *mod* ┃       ┃         tiling/floating toggle ┃       ┃       ┃       ┃       ┃
# ┃ Ctrl  ┃ super ┃ Alt   ┃ Space                          ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
# ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛
#
# keycodes:
# ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
# │  49 │  10 │  11 │ 12  │  13 │  14 │  15 │  16 │  17 │  18 │  19 │  20 │  21 ┃       22 ┃
# │ `   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ -   │ =   ┃ ⌫        ┃
# ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┯━━━━━━━┩
# ┃  23    ┃  24 │  25 │  26 │  27 │  28 │  29 │  30 │  31 │  32 │  33 │  34 │  35 │    63 │
# ┃ ↹      ┃ q   │ w   │ e   │ r   │ t   │ y   │ u   │ i   │ o   │ p   │ [   │ ]   │ \     │
# ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┲━━━━┷━━━━━━━┪
# ┃  66     ┃  38 │  39 │  40 │  41 │  42 │  43 │  44 │  45 │  46 │  47 │  48 ┃         36 ┃
# ┃ ⇬       ┃ a   │ s   │ d   │ f   │ g   │ h   │ j   │ k   │ l   │ ;   │ '   ┃ ⏎          ┃
# ┣━━━━━━━━━┻━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┻━━━━━━━━━━━━┫
# ┃  50        ┃  52 │  53 │  54 │  55 │  56 │  57 │  58 │  59 │  60 │  61 ┃            62 ┃
# ┃ ⇧          ┃ z   │ x   │ c   │ v   │ b   │ n   │ m   │ ,   │ .   │ /   ┃ ⇧             ┃
# ┣━━━━━━━┳━━━━┻━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
# ┃  37   ┃  Mod4 ┃  Mod1 ┃                             65 ┃    93 ┃   116 ┃   117 ┃   109 ┃
# ┃ Ctrl  ┃ super ┃ Alt   ┃ Space                          ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
# ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛
#
# >>>

#|    general                                                               <<<
#|=============================================================================

# define your preferred main modifier key: Alt_L (Mod1) or Super_L (Mod4)
set $mod Mod4

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Set colors from resources
set_from_resource   $black        color0    #222222
set_from_resource   $darkgray     color8    #555555
set_from_resource   $darkred      color1    #880000
set_from_resource   $red          color9    #ff0000
set_from_resource   $darkgreen    color2    #008800
set_from_resource   $green        color10   #00ff00
set_from_resource   $darkyellow   color3    #888800
set_from_resource   $yellow       color11   #ffff00
set_from_resource   $darkblue     color4    #000088
set_from_resource   $blue         color12   #0000ff
set_from_resource   $darkmagenta  color5    #880088
set_from_resource   $magenta      color13   #ff00ff
set_from_resource   $darkcyan     color6    #008888
set_from_resource   $cyan         color14   #00ffff
set_from_resource   $darkwhite    color7    #888888
set_from_resource   $white        color15   #ffffff

set $darkblack      #0e0e0e
set $transparent    #000000CC

# Font for window titles and the status bar. Note: ISO 10646 = Unicode.
font xft:Hack Nerd Font 10

# default mode: workspace_layout <default|stacking|tabbed>
workspace_layout default

# default mode: <normal|1pixel|none>
new_window 1pixel
new_float normal

# gaps config
smart_gaps on
gaps inner 8
smart_borders on

# class                   border     backgr.   text       indicator  child_border
client.focused            $blue      $darkblue $white     $cyan      $darkcyan
client.focused_inactive   $black     $darkgray $white     $darkwhite $darkgray
client.unfocused          $darkblack $black    $darkgray  $darkwhite $black
client.urgent             $red       $darkred  $white     $red       $darkred
client.placeholder        #000000    $darkgray $darkwhite #000000    $darkmagenta
client.background         $transparent

# >>>

#|    workspaces                                                            <<<
#|=============================================================================

# Workspace names:
# the default modifier being Super_L, workspaces 6 to 12 are preferred
# (=> left thumb + right hand to select a workspace)
set $w01  1
set $w02  2
set $w03  3
set $w04  4
set $w05  5
set $w06  6
set $w07  7
set $w08  8
set $w09  9
set $w10 10
set $w11 11
set $w12 12

# Assign first n workspaces to first n outputs
workspace $w01 output DP-2
workspace $w02 output DP-0.2
workspace $w03 output DP-0.1
workspace $w04 output DP-0.3

workspace $w05 output DP-2
workspace $w06 output DP-0.2
workspace $w07 output DP-0.1
workspace $w08 output DP-0.3

workspace $w09 output DP-2
workspace $w10 output DP-0.2
workspace $w11 output DP-0.1
workspace $w12 output DP-0.3

# http://i3wm.org/docs/userguide.html#command_criteria (xprop might be useful…)
# - instance    : window instance = 1st part of WM_CLASS
# - class       : window class    = 2nd part of WM_CLASS
# - window_role : window role     = WM_WINDOW_ROLE
# - title       : X11 window title (_NET_WM_NAME or WM_NAME as fallback)

# Common apps are sorted by workspace
assign [class="^VirtualBox" title="System Processor"]   → $w12
assign [class="^VirtualBox" title="Display Processor"]  → $w12
assign [class="^VirtualBox" title="Manager"]            → $w09
assign [class="^VirtualBox" title="Development VM"]     → $w10

# Firefox can be run with a --class argument: (= "Firefox" by default)
#   https://bugzilla.mozilla.org/show_bug.cgi?id=496653
#   http://www.chevrel.org/carnet/?post/2012/06/06/Fonctionnement-en-parallele-de-deux-versions-de-Firefox
# …which allows to use such commands:
#   firefox -no-remote -profile ~/.mozilla/social --class "social"
#   firefox -no-remote -profile ~/.mozilla/webdev --class "webdev"
#   firefox -no-remote -profile ~/.mozilla/zimbra --class "zimbra"
#assign [class="Firefox"]               → $w07
#assign [class="bugzilla"]              → $w08
#assign [class="social"]                → $w11
#assign [class="webdev"]                → $w09
#assign [class="zimbra"]                → $w06

# >>>

#|    floating windows                                                      <<<
#|=============================================================================

# Correct handling of floating dialogs
# https://wiki.archlinux.org/index.php/i3#Correct_handling_of_floating_dialogs
for_window [window_role="pop-up"]                       floating enable
for_window [window_role="task_dialog"]                  floating enable
for_window [title="^Microsoft Teams Notification$"]     floating enable

# This works for Firefox, Thunderbird, and probably a lot of apps
for_window [window_role="About"]                        floating enable
for_window [window_role="Preferences"]                  floating enable
for_window [title="^Firefox-NVIM$"]                     floating enable

# These windows require a specific rule to be displayed in floating mode:
#for_window [window_role="^Manager"]                     floating enable
#for_window [instance="^Download"]                       floating enable
for_window [instance="^Update"]                         floating enable
for_window [instance="^gcalctool"]                      floating enable
for_window [instance="^galculator"]                     floating enable
for_window [instance="^gnome-keyring"]                  floating enable
for_window [instance="^file_progress"]                  floating enable
for_window [title="^Compress"]                          floating enable
for_window [title="^Compression"]                       floating enable
for_window [title="^screenkey"]                         floating enable
for_window [title="^Debconf"]                           floating enable
for_window [class="control-center"]                     floating enable
for_window [class="^Pavucontrol"]                       floating enable
for_window [class="^B2G$"]                              floating enable
for_window [class="^B2g$"]                              floating enable
for_window [class="^org-sikuli"]                        floating enable

# >>>

#|    wmii-like keybindings                                                 <<<
#|=============================================================================

# Switch between tAbbed/Stacked/Divided/Fullscreen modes         ($mod+[asdf])
bindsym $mod+a layout tabbed
bindsym $mod+o layout stacked
bindsym $mod+e layout toggle split
bindsym $mod+u fullscreen

# Toggle global fullscreen                                       ($mod+shift+f)
bindsym $mod+Shift+f fullscreen global

# Switch between tiling/floating layers                            ($mod+Space)
bindsym $mod+space focus mode_toggle

# Send client to tiling/floating layer                       ($mod+Shift+Space)
bindsym $mod+Shift+space floating toggle

# Kill current window                                            ($mod+Shift+w)
bindsym $mod+Shift+comma kill

# Focus Window, Vim-style                                         ($mod+[hjkl])
bindsym $mod+d exec "nested_navigate.sh L"
bindsym $mod+h exec "nested_navigate.sh D"
bindsym $mod+t exec "nested_navigate.sh U"
bindsym $mod+n exec "nested_navigate.sh R"

# Focus Window, using cursor keys                                 ($mod+arrows)
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# Move Focused Window, Vim-style                            ($mod+Shift+[hjkl])
bindsym $mod+Shift+d move left
bindsym $mod+Shift+h move down
bindsym $mod+Shift+t move up
bindsym $mod+Shift+n move right
# Move Focused Window, using cursor keys                    ($mod+Shift+arrows)
#bindsym $mod+Shift+Left  move left
#bindsym $mod+Shift+Down  move down
#bindsym $mod+Shift+Up    move up
#bindsym $mod+Shift+Right move right

# Workspaces [1…12]                                       ($mod+[1234567890-=])
bindsym $mod+1 workspace $w01
bindsym $mod+2 workspace $w02
bindsym $mod+3 workspace $w03
bindsym $mod+4 workspace $w04
bindsym $mod+5 workspace $w05
bindsym $mod+6 workspace $w06
bindsym $mod+7 workspace $w07
bindsym $mod+8 workspace $w08
bindsym $mod+9 workspace $w09
bindsym $mod+0 workspace $w10
bindsym $mod+bracketleft workspace $w11
bindsym $mod+bracketright workspace $w12

# Move to Workspace [1…12]                          ($mod+Shift+[1234567890-=])
bindsym $mod+Shift+1 move workspace $w01
bindsym $mod+Shift+2 move workspace $w02
bindsym $mod+Shift+3 move workspace $w03
bindsym $mod+Shift+4 move workspace $w04
bindsym $mod+Shift+5 move workspace $w05
bindsym $mod+Shift+6 move workspace $w06
bindsym $mod+Shift+7 move workspace $w07
bindsym $mod+Shift+8 move workspace $w08
bindsym $mod+Shift+9 move workspace $w09
bindsym $mod+Shift+0 move workspace $w10
bindsym $mod+Shift+bracketleft move workspace $w11
bindsym $mod+Shift+bracketright move workspace $w12

# >>>

#|    i3-specific keybindings                                               <<<
#|=============================================================================

# Resize Containers, Vim-style                            ($mod+Control+[hjkl])
# see http://bugs.i3wm.org/report/ticket/576
bindsym $mod+Control+d resize shrink width 
bindsym $mod+Control+h resize grow   height
bindsym $mod+Control+t resize shrink height
bindsym $mod+Control+n resize grow   width
# Resize Containers, using cursor keys                    ($mod+Control+arrows)
#bindsym $mod+Control+Left  resize shrink right 10 px or 5 ppt
#bindsym $mod+Control+Down  resize grow   down  10 px or 5 ppt
#bindsym $mod+Control+Up    resize shrink down  10 px or 5 ppt
#bindsym $mod+Control+Right resize grow   right 10 px or 5 ppt

# These [hjkl] bindings trigger as soon as you enter the resize mode   ($mod+r)
bindsym $mod+r mode "resize"
mode "resize" {
  # Vim-style
  bindsym d resize shrink width
  bindsym h resize grow   height
  bindsym t resize shrink height
  bindsym n resize grow   width
  # cursor keys
  #bindsym Left  resize shrink right 10 px or 5 ppt
  #bindsym Down  resize grow   down  10 px or 5 ppt
  #bindsym Up    resize shrink down  10 px or 5 ppt
  #bindsym Right resize grow   right 10 px or 5 ppt

  # back to normal: Enter or Escape or Space
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym space  mode "default"
}

# Previous/Next Workspace                                         ($mod+Escape)
mode "passthrough" {
  # back to normal
  bindsym $mod+Shift+Escape mode "default"
}
#bind $mod+Shift+9 mode "passthrough"; exec sh -c 'sleep 2 && i3-msg mode "default"'
bindsym $mod+Shift+Escape mode "passthrough"

# Previous/Next Workspace                                           ($mod+[ui])
bindsym $mod+g workspace prev
bindsym $mod+c workspace next

# Move to previous/Next Workspace                             ($mod+Shift+[ui])
bindsym $mod+Shift+g move window to workspace prev
bindsym $mod+Shift+c move window to workspace next

# Back to last workspace                                               ($mod+')
bindsym $mod+apostrophe workspace back_and_forth
workspace_auto_back_and_forth yes

# Select adjacent output (screen)                                 ($mod+[nm,.])
bindsym $mod+b focus output left
bindsym $mod+m focus output down
bindsym $mod+w focus output up
bindsym $mod+v focus output right

# Move workspace to adjacent output (screen)                      ($mod+[nm,.])
bindsym $mod+Shift+b move workspace to output left
bindsym $mod+Shift+m move workspace to output down
bindsym $mod+Shift+w move workspace to output up
bindsym $mod+Shift+v move workspace to output right

# Move the currently focused window to the scratchpad                  ($mod+/)
bindsym $mod+z scratchpad show

# Show/hide the scratchpad window                                ($mod+Shift+/)
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Shift+z move scratchpad

# Reload i3 configuration                                        ($mod+Shift+r)
bindsym $mod+Shift+r reload

# Restart i3 inplace                                     ($mod+Shift+BackSpace)
bindsym $mod+Shift+BackSpace restart

# Exit i3                                                 ($mod+Ctrl+BackSpace)
#bind $mod+Control+22 exit
bindsym $mod+Control+BackSpace exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Split (horizontal/vertical)                                  ($mod[+Shift]+o)
bindsym $mod+Shift+backslash split h
bindsym $mod+minus split v

# Focus parent/child                                           ($mod[+Shift]+;)
# note: this key doesn’t work well with Qwerty-Lafayette (dead key)
bindsym $mod+semicolon       focus parent
bindsym $mod+Shift+semicolon focus child

# Cycle through border styles                                          ($mod+b)
# (note: does not apply to tabbed containers)
bindsym $mod+Control+b border toggle

# >>>

#|    applications & scripts                                                <<<
#|=============================================================================

# Start a new terminal                                             ($mod+Enter)
bindsym $mod+Return exec "i3-sensible-terminal -e tmux"

# Enable scrollwheel emulation                                         ($mod+i)
bindsym $mod+i exec "toggle-scrollwheel-emulation.sh $MOUSE"
bindsym --whole-window button9 exec "toggle-scrollwheel-emulation.sh $MOUSE"

# Application launcher                                                 ($mod+p)
# beware of gnome-settings-daemon:
# http://askubuntu.com/questions/68463/how-to-disable-global-super-p-shortcut
# http://askubuntu.com/questions/20113/how-to-stop-mod4-p-from-switching-the-display
bindsym $mod+p exec --no-startup-id "rofi -show run"

# There also is the (new) i3-dmenu-desktop which only displays   ($mod+Shift+p)
# applications shipping a .desktop file.
bindsym $mod+Shift+p exec --no-startup-id "rofi -show drun"

# Window switcher                                                    ($mod+Tab)
bindsym $mod+Tab exec --no-startup-id "rofi -show window"

# Lock screen                                                          ($mod+l)
bindsym $mod+l exec --no-startup-id xscreensaver-command -lock

# Autostart applications
#exec --no-startup-id ~/bin/monitor-config.sh
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id xscreensaver -no-splash
exec --no-startup-id compton -b
exec --no-startup-id sleep 5; sh ~/.fehbg
exec --no-startup-id mattermost-desktop
exec --no-startup-id ssh-agent -t 3600
exec --no-startup-id sleep 5; ~/bin/screen-lock-do.sh

# >>>

#|    generic shortcuts (xdotool powwa!)                                    <<<
#|=============================================================================

# Dvorak-compliant cut/copy/paste                                  ($mod+[xcv])
#bindsym $mod+x exec "xdotool getactivewindow key ctrl+x"
#bindsym $mod+c exec "xdotool getactivewindow key ctrl+c"
#bindsym $mod+v exec "xdotool getactivewindow key ctrl+v"

# Word-by-word movements                                            (alt+arrow)
# bindsym mod1+Left  exec "xdotool getactivewindow key ctrl+Left"
# bindsym mod1+Down  exec "xdotool getactivewindow key ctrl+Down"
# bindsym mod1+Up    exec "xdotool getactivewindow key ctrl+Up"
# bindsym mod1+Right exec "xdotool getactivewindow key ctrl+Right"

#                                                                 (super+arrow)
# bindsym mod4+Left  exec "xdotool getactivewindow key Home"
# bindsym mod4+Down  exec "xdotool getactivewindow key Next"
# bindsym mod4+Up    exec "xdotool getactivewindow key Prior"
# bindsym mod4+Right exec "xdotool getactivewindow key End"

# Word-by-word selection                                      (alt+shift+arrow)
# bindsym mod1+Shift+Left  exec "xdotool getactivewindow key ctrl+shift+Left"
# bindsym mod1+Shift+Down  exec "xdotool getactivewindow key ctrl+shift+Down"
# bindsym mod1+Shift+Up    exec "xdotool getactivewindow key ctrl+shift+Up"
# bindsym mod1+Shift+Right exec "xdotool getactivewindow key ctrl+shift+Right"

#                                                           (super+shift+arrow)
# bindsym mod4+Shift+Left  exec "xdotool getactivewindow key shift+Home"
# bindsym mod4+Shift+Down  exec "xdotool getactivewindow key shift+Next"
# bindsym mod4+Shift+Up    exec "xdotool getactivewindow key shift+Prior"
# bindsym mod4+Shift+Right exec "xdotool getactivewindow key shift+End"

# Mouse pointer                                                    ($mod+arrow)
# bindsym $mod+Left  exec "xdotool mousemove_relative -- -20   0"
# bindsym $mod+Down  exec "xdotool mousemove_relative --   0  20"
# bindsym $mod+Up    exec "xdotool mousemove_relative --   0 -20"
# bindsym $mod+Right exec "xdotool mousemove_relative --  20   0"

# Mouse clicks                                               ($mod+shift+arrow)
# bindsym $mod+Shift+Left  exec "xdotool click 1"
# bindsym $mod+Shift+Down  exec "xdotool click 5"
# bindsym $mod+Shift+Up    exec "xdotool click 4"
# bindsym $mod+Shift+Right exec "xdotool click 3"

# >>>

#|    multimedia keys (Thinkpad X220)                                       <<<
#|=============================================================================

# Screenshot                                                           (PrtScr)
# +shift ⇒ focused window only
# bind 107       exec "scrot    -e 'mv $f ~/Pictures/Screenshots'"
# bind Shift+107 exec "scrot -u -e 'mv $f ~/Pictures/Screenshots'"

# Volume control                                               (mute|vol-|vol+)
# https://github.com/fabi1cazenave/dotFiles/blob/master/bin/mvolume
# bind 121 exec "amixer set Master toggle && pkill -USR1 -x i3status"
# bind 122 exec "amixer set Master 3%- && pkill -USR1 -x i3status"
# bind 123 exec "amixer set Master 3%+ && pkill -USR1 -x i3status"

# Playlist control (cmus)                                            (Fn+arrow)
# bind 171 exec "cmus-remote --next"
# bind 172 exec "cmus-remote --pause"
# bind 173 exec "cmus-remote --prev"
# bind 174 exec "cmus-remote --stop"

# lock, battery, sleep, hibernate                           (Fn+[F2|F3|F4|F12])
# https://github.com/fabi1cazenave/dotFiles/blob/master/bin/gsession
# bind 160 exec "gsession lock"
#bind 244 exec ""
# bind 150 exec "gsession suspend"
# bind 213 exec "gsession hibernate"

# ???                                                        (Fn+[F5|F6|F7|F8])
#bind 246 exec ""
#bind 220 exec ""
#bind 235 exec ""
#bind 199 exec ""

# >>>

# vim: set fdm=marker fmr=<<<,>>> fdl=0 filetype=i3config:
